/*
 * Modern Light 2-Level Tab Theme v1.4 (Normalized & Enhanced)
 * Author: AI Assistant & Sager
 * Description: A clean, modern light theme for a 2-level tabbed UI with larger fonts,
 *              and improved consistency for new UI elements.
 */

/* ================== 全局样式 ================== */
QWidget {
    font-family: "Microsoft YaHei", sans-serif;
    color: #2C160D;
    background-color: transparent; 
    font-size: 18px;
}

QMainWindow { 
    background-color: #FFF8F6; 
}

QMessageBox, QDialog { 
    background-color: #FFF8F6; 
}
QMessageBox QLabel { 
    font-size: 18px; 
}

/* ================== 一级标签页 (Ribbon-Style) ================== */
QTabWidget#MainTabWidget::pane { 
    border-top: 1px solid #FFDBCF; 
    background-color: #FFF8F6; 
}
QTabWidget#MainTabWidget::tab-bar { 
    alignment: left; 
}
QTabBar::tab:!first { 
    margin-left: -1px; 
}
QTabWidget#MainTabWidget QTabBar::tab {
    background: #FCEAE4;
    color: #8F4C33;
    border: 1px solid #FFDBCF;
    border-bottom: none; 
    font-size: 20px;
    font-weight: bold;
    margin-right: 4px; 
    min-width: 180px;
    padding: 12px 20px;
}
QTabWidget#MainTabWidget QTabBar::tab:hover {
    background: #FFDBCF;
}
QTabWidget#MainTabWidget QTabBar::tab:selected {
    background: #FFF8F6; 
    color: #2C160D;
    border-top-left-radius: 6px;
    border-top-right-radius: 6px;
}
QTabWidget#MainTabWidget QTabBar::tab:disabled { 
    background: #E0E0E0;
    color: #a0a0a0;
}

/* ================== 二级标签页 (Compact-Style) ================== */
QTabWidget#SubTabWidget::pane { 
    border: none; 
    background-color: transparent; 
}
QTabWidget#SubTabWidget::tab-bar { 
    alignment: left; 
}
QTabWidget#SubTabWidget QTabBar::tab {
    background: transparent;
    color: #8F4C33;
    border: none;
    border-bottom: 3px solid transparent;
    padding: 10px 25px; 
    font-size: 18px;
}
QTabWidget#SubTabWidget QTabBar::tab:hover {
    background-color: #fef5f2;
    border-bottom: 3px solid #FFDBCF;
}
QTabWidget#SubTabWidget QTabBar::tab:selected {
    color: #2C160D;
    font-weight: bold;
    border-bottom: 3px solid #8F4C33;
}
QTabWidget#SubTabWidget QTabBar::tab:disabled { 
    color: #b0b0b0;
}

/* ================== 按钮样式 ================== */
QPushButton {
    border: none; 
    padding: 10px 20px;  /* 稍微减小默认按钮的填充，使其不那么突出 */
    border-radius: 20px; /* 配合新的填充调整圆角 */
    font-size: 18px;
    background-color: #FCEAE4; 
    color: #2C160D;
    min-height: 30px; /* 确保按钮有一个最小高度 */
}
QPushButton:hover { background-color: #FFDBCF; }
QPushButton:pressed { background-color: #e8d2c6; }
QPushButton:disabled { background-color: #E0E0E0; color: #a0a0a0; }

/* 特殊按钮: AccentButton (强调按钮，通常用于主要操作) */
QPushButton#AccentButton { 
    background-color: #8F4C33; 
    color: #FFF8F6; 
    font-weight: bold; 
    padding: 12px 24px; /* 强调按钮可以大一些 */
    border-radius: 22px;
}
QPushButton#AccentButton:hover { background-color: #a45f43; }
QPushButton#AccentButton:pressed { background-color: #7a3f23; }

/* 特殊按钮: LinkButton (表格内链接式删除按钮) */
QPushButton#LinkButton {
    background-color: transparent;
    color: #8F4C33;
    border: none;
    text-decoration: underline;
    padding: 5px; /* 链接按钮通常不需要很多内边距 */
    border-radius: 0px;
    font-size: 16px; 
    min-height: 0px; /* 链接按钮不需要最小高度 */
}
QPushButton#LinkButton:hover { color: #a45f43; }
QPushButton#LinkButton:pressed { color: #2C160D; }


/* ===== 新增/MODIFIED: 为次要操作按钮（如“打开文件夹”）定义一个通用样式 ===== */
/* 如果不设置 objectName, 它会继承基础 QPushButton 样式 */
/* 但如果希望它更紧凑，可以加一个 objectName, 例如 "ToolButton" */
/* QPushButton#ToolButton { */
/*     padding: 6px 12px; */
/*     font-size: 16px; */
/*     border-radius: 15px; */
/*     background-color: #f0f0f0; /* 一个更中性的颜色 */
/*     color: #333333; */
/* } */
/* QPushButton#ToolButton:hover { background-color: #e0e0e0; } */
/* QPushButton#ToolButton:pressed { background-color: #d0d0d0; } */

/* 特殊按钮: ActionButton_Delete (如果需要，为结束会话等按钮定义特殊红色系样式) */
QPushButton#ActionButton_Delete {
    background-color: #D98880; /* 一个柔和的红色 */
    color: white;
    font-weight: bold;
    padding: 12px 24px;
    border-radius: 22px;
}
QPushButton#ActionButton_Delete:hover { background-color: #CD5C5C; }
QPushButton#ActionButton_Delete:pressed { background-color: #A93226; }


/* ================== 其他常用控件 ================== */
QLabel { /* color 会继承 QWidget */ }

QLineEdit, QPlainTextEdit, QTextBrowser { /* QTextBrowser也加入进来，确保一致性 */
    background-color: #ffffff; 
    border: 1px solid #FCEAE4; 
    border-radius: 8px; 
    padding: 8px; 
    color: #2C160D; 
}
/* 为QTextBrowser的链接设置特定颜色（如果需要覆盖默认） */
QTextBrowser a {
    color: #8F4C33;
    text-decoration: none;
}
QTextBrowser a:hover {
    text-decoration: underline;
}


QComboBox { 
    background-color: #ffffff; 
    border: 1px solid #FCEAE4; 
    border-radius: 8px; /* 让ComboBox也有一点圆角，与QLineEdit统一 */
    padding: 8px; 
    color: #2C160D; 
    min-height: 22px; /* 确保ComboBox的高度与QLineEdit相似 */
}
QComboBox::drop-down { 
    border: none; 
    /* 可以考虑添加一个下拉箭头图标 */
    /* image: url(path/to/dropdown-arrow.png); */
    /* width: 15px; */
    /* height: 15px; */
    /* margin-right: 5px; */
}
QComboBox::down-arrow { /* 默认的下拉箭头，可以隐藏或替换 */
    image: none; /* 隐藏默认箭头，如果使用自定义image */
}

QComboBox QAbstractItemView { 
    border: 1px solid #FCEAE4;
    background-color: #FFF8F6;
    selection-background-color: #FFDBCF;
    selection-color: #2C160D; 
    outline: 0px; 
    border-radius: 4px; /* 给下拉列表本身也加一点圆角 */
}


QGroupBox { 
    border: 1px solid #FCEAE4; 
    border-radius: 8px; 
    margin-top: 10px; 
    padding: 25px 10px 10px 10px; 
}
QGroupBox::title { 
    subcontrol-origin: margin; 
    subcontrol-position: top left; 
    padding: 0px 8px; 
    margin-left: 10px; 
    background-color: #FFF8F6; 
    color: #2C160D;
    font-weight: bold;
    border-radius: 4px; /* 给标题背景也加一点圆角 */
}

QListWidget, QTableWidget { 
    background-color: #ffffff; 
    border: 1px solid #FCEAE4; 
    border-radius: 8px; 
    outline: 0px; /* 去掉选中时的虚线框 */
}
QTableWidget { 
    alternate-background-color: #fefcfb; 
    gridline-color: #FCEAE4; /* 给表格线一个柔和的颜色 */
}
QListWidget::item { 
    padding: 10px; 
    border-bottom: 1px solid #FFF8F6; 
}
QListWidget::item:selected, QTableWidget::item:selected { 
    background-color: #FFDBCF; 
    color: #2C160D; 
    /* border: 1px solid #8F4C33; 可选：给选中项加边框 */
}
/* 使QTableWidget的单元格在编辑时有更清晰的边框 */
QTableWidget QLineEdit {
    border-radius: 0px; /* 编辑器通常不需要圆角 */
    border: 1px solid #8F4C33; /* 编辑时高亮边框 */
}


QHeaderView::section { 
    background-color: #FCEAE4; 
    padding: 10px; 
    border: none; 
    border-bottom: 1px solid #FFDBCF; 
    font-weight: bold;
    color: #2C160D;
}

QProgressBar { 
    border: 1px solid #FCEAE4; 
    border-radius: 12px; 
    text-align: center; 
    color: #2C160D; 
    height: 24px; 
    background-color: #ffffff; /* 给进度条背景一个明确的颜色 */
}
QProgressBar::chunk { 
    background-color: #8F4C33; 
    border-radius: 11px; 
}

QSlider::groove:horizontal { 
    border: none; 
    height: 8px; 
    background: #FCEAE4; 
    margin: 2px 0; 
    border-radius: 4px; 
}
QSlider::handle:horizontal { 
    background: #8F4C33; 
    border: none; 
    width: 20px; 
    margin: -6px 0; 
    border-radius: 10px; 
}

QScrollBar:vertical { 
    border: none; 
    background: #fbeee9; 
    width: 15px; 
    margin: 0; 
}
QScrollBar::handle:vertical { 
    background: #E8D2C6; /* 使滑块颜色更柔和 */
    min-height: 25px; 
    border-radius: 7px; 
}
QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical { 
    border: none; background: none; height: 0px;
    subcontrol-position: top; subcontrol-origin: margin;
}
QScrollBar:horizontal {
    border: none;
    background: #fbeee9;
    height: 15px;
    margin: 0;
}
QScrollBar::handle:horizontal {
    background: #E8D2C6;
    min-width: 25px;
    border-radius: 7px;
}
QScrollBar::add-line:horizontal, QScrollBar::sub-line:horizontal {
    border: none; background: none; width: 0px;
}


/* ================== 全局右键菜单 (QMenu) 样式 ================== */
QMenu {
    background-color: #FFF8F6;
    color: #2C160D;
    border: 1px solid #FCEAE4;
    padding: 5px;
    border-radius: 4px;
}
QMenu::item {
    background-color: transparent;
    color: #2C160D;
    padding: 8px 25px 8px 25px;
    border: 1px solid transparent;
    margin: 2px 0px;
}
QMenu::item:selected {
    background-color: #FFDBCF;
    color: #2C160D;
    border-radius: 3px;
}
QMenu::item:disabled {
    color: #a0a0a0;
    background-color: transparent;
}
QMenu::separator {
    height: 1px;
    background: #FFDBCF;
    margin-left: 10px;
    margin-right: 10px;
    margin-top: 3px;
    margin-bottom: 3px;
}
QMenu::icon {
    padding-left: 10px;
    width: 16px;
    height: 16px;
}

/* ===== 新增/MODIFIED: 确保 QFormLayout 中的控件间距合适 ===== */
/* QFormLayout 本身不能直接用QSS设置内部间距，但可以影响其子控件的边距 */
/* 如果按钮在QFormLayout中显得太挤，可以尝试给这些按钮一个objectName, 然后单独设置其margin */
/* 例如，如果 "打开" 按钮的 objectName 是 "OpenDirButtonInForm" */
/*
QPushButton#OpenDirButtonInForm {
    margin-left: 5px;  
}
*/
/* 或者，如果是一个 QHBoxLayout 包裹了 QLineEdit 和 QPushButton，可以对这个 QHBoxLayout 设置间距 */
/* （这通常在Python代码中用 layout.setSpacing(5) 完成）*/
ToggleSwitch {
    qproperty-trackColorOff: #E0E0E0;      /* 关闭时: 浅灰色轨道 */
    qproperty-trackColorOn: #8F4C33;       /* 打开时: 主题棕色 */
    qproperty-knobColor: #FFFFFF;          /* 滑块: 白色 */
    qproperty-trackBorderRadius: 15;       /* 轨道圆角 */
    qproperty-knobMargin: 3;               
    qproperty-knobShape: 'ellipse';        /* 明确指定圆形 */
    qproperty-borderWidth: 0;              /* 无边框 */
    qproperty-borderColor: transparent;    
    min-width: 60px;                       
    max-width: 60px;                       
    min-height: 30px;                      
    max-height: 30px;                      
}
/* --- 方言图文采集页面 --- */
QLabel#ScalableImageLabel {
    border: 1px solid #FCEAE4;
    background-color: #FFFFFF;
    color: #a0a0a0; /* 占位文字颜色 */
}

QLabel#PromptTextLabel {
    padding: 5px;
    color: #4A4034; /* 主文本颜色 */
    font-size: 20px;
    font-weight: bold;
    background-color: #FAF6F4; /* 一个非常浅的背景，与主背景区分 */
    border-radius: 8px;
}

QTextEdit#NotesTextEdit {
    background-color: #fdfaf6;
    border: 1px solid #EAE0C9;
    border-radius: 4px;
    padding: 8px;
    color: #4A4034;
}