/*
 * ============================================================================
 *  Modern Light Tab v2.1 - Standard Edition
 *  Author: AI Assistant (Successor)
 *  Date: [Current Date]
 *  Description: 一个明亮、干净、现代化的主题，专注于清晰度和可用性。
 *               此版本拥有更宽裕的间距和更大的字体，适合标准桌面显示。
 *
 *  @icon-path: "../assets/icons" 
 *  ^-- [核心] 此声明告诉主程序，本主题将使用默认图标。
 * ============================================================================
 */

/* == 1. 全局与基础样式 (Global & Base Styles) == */
/* ============================================================================== */
QWidget {
    /* [修改] 基础字体从 16px 增大到 17px */
    font-family: "Microsoft YaHei", "Segoe UI", "Source Han Sans SC", sans-serif;
    color: #2c3e50; 
    font-size: 17px;
    font-weight: normal;
}

QMainWindow, QWidget#CentralWidget, QStackedWidget > QWidget, QTabWidget::pane > QWidget {
    background-color: #F7F9FC; 
}

/* ============================================================================== */
/* == 2. 容器与布局控件 (Containers & Layout Widgets) == */
/* ============================================================================== */
QGroupBox { 
    border: 1px solid #E1E5E8;
    margin-top: 16px; /* [修改] 增加上边距 */
    padding: 20px 15px 15px 15px; /* [修改] 增加内边距 */
    border-radius: 10px; /* [修改] 增大圆角 */
}
QGroupBox::title { 
    subcontrol-origin: margin; 
    subcontrol-position: top left; 
    padding: 2px 15px; /* [修改] 增加内边距 */
    margin-left: 15px; /* [修改] 增加左边距 */
    background-color: #F7F9FC; 
    color: #2c3e50;
    font-weight: bold;
    border-radius: 5px;
}

QSplitter::handle {
    background-color: #E8ECF0;
}
QSplitter::handle:horizontal {
    width: 3px; /* [修改] 增大分割条宽度 */
}
QSplitter::handle:vertical {
    height: 3px; /* [修改] 增大分割条高度 */
}
QSplitter::handle:hover {
    background-color: #3B97E3;
}

/* ============================================================================== */
/* == 3. 标签页 (Tab Widgets) - 主次分明的设计 == */
/* ============================================================================== */

/* --- 3.1 一级标签页 (Main Tabs - 融入式样式) --- */
QTabWidget#MainTabWidget::pane { 
    border-top: 1px solid #D9DEE4;
    background-color: #FFFFFF; 
    border-radius: 0 0 10px 10px; /* [修改] 增大圆角 */
}
QTabWidget#MainTabWidget::tab-bar { 
    alignment: left; 
}

QTabWidget#MainTabWidget QTabBar::tab {
    background-color: #E9EDF0; 
    color: #556270;
    border: 1px solid #D9DEE4;
    border-bottom: none; 
    font-size: 19px; /* [修改] 增大字体 */
    font-weight: bold;
    margin-right: 2px;
    min-width: 160px; /* [修改] 增大最小宽度 */
    padding: 12px 25px; /* [修改] 增大内边距 */
}
QTabWidget#MainTabWidget QTabBar::tab:hover:!selected {
    background-color: #F0F2F4;
    color: #3B97E3; 
}
QTabWidget#MainTabWidget QTabBar::tab:selected {
    background-color: #FFFFFF; 
    color: #3B97E3; 
    border-bottom-color: #FFFFFF; 
    margin-bottom: -1px; 
}

/* --- 3.2 二级标签页 (Sub Tabs - 下划线样式) --- */
QTabWidget#SubTabWidget::pane { 
    border: none; 
}
QTabWidget#SubTabWidget::tab-bar { 
    alignment: left;
    border-bottom: 1px solid #D9DEE4; 
}

QTabWidget#SubTabWidget QTabBar::tab {
    background: transparent;
    color: #778899;
    border: none;
    border-bottom: 3px solid transparent; 
    padding: 10px 20px; /* [修改] 增大内边距 */
    font-size: 17px; /* [修改] 增大字体 */
    font-weight: bold;
}
QTabWidget#SubTabWidget QTabBar::tab:hover:!selected {
    color: #2c3e50; 
}
QTabWidget#SubTabWidget QTabBar::tab:selected {
    color: #3B97E3;
    border-bottom: 3px solid #3B97E3; 
}
QTabWidget#SubTabWidget QTabBar::tab:disabled { 
    color: #B0C4DE; 
}

/* ============================================================================== */
/* == 4. 核心交互控件 (Core Interactive Widgets) == */
/* ============================================================================== */

/* --- 4.1 按钮 (QPushButton) --- */
QPushButton {
    border: 1px solid #BCC8D4; 
    padding: 10px 24px; /* [修改] 增大内边距 */
    border-radius: 6px; /* [修改] 增大圆角 */
    font-size: 17px; /* [修改] 增大字体 */
    background-color: #FFFFFF; 
    color: #34495e;
    min-height: 32px; /* [修改] 增大最小高度 */
}
QPushButton:hover { 
    background-color: #F8F9FA; 
    border-color: #3B97E3; 
}
QPushButton:pressed { 
    background-color: #E9EDF0; 
}
QPushButton:disabled { 
    background-color: #F4F6F8;
    color: #a0a0a0; 
    border-color: #E0E0E0;
}

/* [特殊] 主要操作/强调按钮 */
QPushButton#AccentButton { 
    background-color: #3B97E3;
    color: #FFFFFF; 
    font-weight: bold; 
    border: 2px solid #3B97E3; 
    padding: 10px 24px; /* [修改] 增大内边距 */
}
QPushButton#AccentButton:hover { 
    background-color: #5DA9E8; 
    border-color: #2F78C0; 
}
QPushButton#AccentButton:pressed { 
    background-color: #2F78C0; 
    border-color: #2c3e50; 
}

/* [特殊] 危险操作按钮 */
QPushButton#ActionButton_Delete {
    background-color: #E57373; 
    color: #FFFFFF;
    font-weight: bold;
    border: 2px solid #E57373; 
    padding: 10px 24px; /* [修改] 增大内边距 */
}
QPushButton#ActionButton_Delete:hover { 
    background-color: #EF5350; 
    border-color: #D32F2F; 
}
QPushButton#ActionButton_Delete:pressed { 
    background-color: #C62828; 
    border-color: #B71C1C; 
}

/* --- 4.2 输入框 (QLineEdit, QPlainTextEdit, QTextBrowser) --- */
QLineEdit, 
QPlainTextEdit, 
QTextBrowser { 
    background-color: #FFFFFF; 
    border: 1px solid transparent; 
    border-bottom: 1px solid #D9DEE4; 
    border-radius: 6px; /* [修改] 增大圆角 */
    padding: 10px; /* [修改] 增大内边距 */
    selection-background-color: #A6CFF5;
    selection-color: #000000;
}

QLineEdit:hover, 
QPlainTextEdit:hover, 
QTextBrowser:hover {
    border-bottom: 2px solid #91C8DB;
}

QLineEdit:focus, 
QPlainTextEdit:focus, 
QTextBrowser:focus { 
    border: 1px solid transparent; 
    border-bottom: 3px solid #3B97E3;
}

QLineEdit:disabled, 
QPlainTextEdit:disabled, 
QTextBrowser:disabled {
    background-color: #F4F6F8;
    color: #a0a0a0;
    border-bottom: 1px solid #E9EDF0; 
}

QTextBrowser a { color: #3B97E3; text-decoration: none; }
QTextBrowser a:hover { text-decoration: underline; color: #2F78C0; }

/* --- 4.3 下拉框 (QComboBox) --- */
QComboBox { 
    background-color: #FFFFFF; 
    border: 1px solid #D9DEE4; 
    border-radius: 8px; 
    padding: 9px 12px; /* [修改] 增大内边距 */
    min-height: 30px; /* [修改] 增大最小高度 */
}
QComboBox:hover {
    border-color: #aab8c6; 
}
QComboBox:focus { 
    border: 1px solid #3B97E3; 
}
QComboBox::drop-down { 
    border: none; 
    background-color: #F4F6F8; 
    width: 22px; /* [修改] 增大宽度 */
    border-top-right-radius: 8px; 
    border-bottom-right-radius: 8px; 
}
QComboBox::down-arrow {
    image: url(icon:arrow_down);
    width: 14px; /* [修改] 增大图标尺寸 */
    height: 14px;
}
QComboBox QAbstractItemView { 
    border: 1px solid #D9DEE4; 
    background-color: #FFFFFF; 
    selection-background-color: #E9EDF0; 
    selection-color: #2c3e50; 
    outline: 0px; 
    border-radius: 6px; /* [修改] 增大圆角 */
}
QComboBox QAbstractItemView::item { 
    padding: 10px 14px; /* [修改] 增大内边距 */
    min-height: 24px; /* [修改] 增大最小高度 */
}

/* --- 4.4 列表与表格 (QListWidget, QTableWidget) --- */
QListWidget, QTableWidget { 
    background-color: #FFFFFF; 
    border: 1px solid #D9DEE4; 
    border-radius: 6px; /* [修改] 增大圆角 */
    outline: 0px; 
    alternate-background-color: #F8FAFC; 
    gridline-color: #E9EDF0; 
}
QListWidget::item {
    padding: 10px 5px; /* [修改] 增大上下内边距 */
}
QListWidget::item:selected, QTableWidget::item:selected { 
    background-color: #3B97E3; 
    color: #FFFFFF; 
}
QHeaderView::section { 
    background-color: #F4F6F8; 
    padding: 10px; /* [修改] 增大内边距 */
    border: none;
    border-bottom: 1px solid #D9DEE4; 
    font-weight: bold; 
    color: #556270;
}
QTableCornerButton::section { 
    background-color: #F4F6F8; 
    border: 1px solid #D9DEE4;
}
QHeaderView::section:pressed { 
    background-color: #D9DEE4; /* [核心] 背景色变为稍深的灰色，模拟按下 */
    padding-top: 11px;         /* [核心] 增加上内边距，模拟内容被“推入” */
    padding-left: 11px;        /* [核心] 增加左内边距，模拟内容被“推入” */
    border-bottom: 2px solid #3B97E3; /* [核心] 底部边框变为主题蓝色，模拟凹陷 */
    color: #556270;            /* 文字颜色保持不变，确保可读性 */
}

/* --- 4.5 滑块 (QSlider) & 进度条 (QProgressBar) --- */
QSlider::groove:horizontal { 
    border: none;
    height: 8px; /* [修改] 增大高度 */
    background: #E9EDF0;
    margin: 2px 0;
    border-radius: 4px; 
}
QSlider::handle:horizontal { 
    background: #FFFFFF; 
    border: 2px solid #3B97E3; 
    width: 16px; /* [修改] 增大尺寸 */
    height: 16px;
    margin: -6px 0; 
    border-radius: 10px; 
}

QProgressBar { 
    border: 1px solid #D9DEE4; 
    border-radius: 6px; 
    text-align: center; 
    color: #FFFFFF; 
    height: 22px; /* [修改] 增大高度 */
    background-color: #E9EDF0; 
    font-weight: bold;
}
QProgressBar::chunk { 
    background-color: #3B97E3;
    border-radius: 5px;
}

/* --- 4.6 滚动条 (QScrollBar) --- */
QScrollBar:vertical, QScrollBar:horizontal {
    border: none;
    background: #F4F6F8;
    width: 14px; /* [修改] 增大宽度 */
    height: 14px;
    margin: 0px;
}
QScrollBar::handle:vertical, QScrollBar::handle:horizontal {
    background: #D9DEE4;
    min-height: 35px; /* [修改] 增大最小尺寸 */
    min-width: 35px;
    border-radius: 7px;
}
QScrollBar::handle:vertical:hover, QScrollBar::handle:horizontal:hover {
    background: #BCC8D4;
}
QScrollBar::add-line, QScrollBar::sub-line {
    border: none; background: transparent; height: 0; width: 0;
}

/* --- 4.7 菜单 (QMenu) --- */
QMenu {
    background-color: #FFFFFF;
    border: 1px solid #D9DEE4;
    padding: 6px; /* [修改] 增大内边距 */
    border-radius: 8px; /* [修改] 增大圆角 */
}
QMenu::item {
    padding: 10px 30px; /* [修改] 增大内边距 */
    border-radius: 5px;
}
QMenu::item:selected {
    background-color: #E9EDF0;
    color: #3B97E3;
}
QMenu::item:disabled { color: #a0a0a0; }
QMenu::separator { height: 1px; background: #E9EDF0; margin: 6px; }
QMenu::icon { padding-left: 10px; width: 18px; height: 18px; }

/* --- 4.8 提示框 (QToolTip) & 消息框 (QMessageBox) --- */
QToolTip {
    background-color: #34495e; 
    color: #FFFFFF; 
    border: 1px solid #34495e;
    padding: 8px 12px; /* [修改] 增大内边距 */
    border-radius: 5px;
    opacity: 230; 
}

QMessageBox, QDialog { 
    background-color: #FFFFFF;
    border: 1px solid #D9DEE4;
    border-radius: 8px;
}
QMessageBox QLabel, QDialog QLabel { 
    font-size: 17px; /* [修改] 增大字体 */
}

/* ============================================================================== */
/* == 5. 自定义控件样式 (Custom Widget Styles) == */
/* ============================================================================== */
ToggleSwitch {
    qproperty-trackColorOff: #D9DEE4;      
    qproperty-trackColorOn: #3B97E3;       
    qproperty-knobColor: #FFFFFF;          
    qproperty-trackBorderRadius: 16; /* [修改] 增大圆角 */
    qproperty-borderWidth: 0;
    qproperty-knobMargin: 3; /* [修改] 增大边距 */
    qproperty-knobShape: 'ellipse';      
    min-width: 60px; max-width: 60px; /* [修改] 增大尺寸 */
    min-height: 32px; max-height: 32px;                      
}

WaveformWidget {
    qproperty-waveformColor: #a0a0a0;
    qproperty-cursorColor: #E53935;
    qproperty-selectionColor: rgba(59, 151, 227, 60); 
}

/* ============================================================================== */
/* == 6. 模块特定样式 (Module-specific Styles) == */
/* ============================================================================== */
QLabel#ScalableImageLabel {
    border: 1px dashed #D9DEE4;
    background-color: #FFFFFF;
    color: #B0B0B0; 
    border-radius: 6px;
}
QLabel#PromptTextLabel {
    padding: 10px; font-size: 20px; font-weight: bold; /* [修改] 增大尺寸 */
}
QTextEdit#NotesTextEdit {
    background-color: #F8FAFC; border: 1px solid #E9EDF0; 
    color: #556270;
}
QRadioButton {
    spacing: 10px; padding: 6px 0; font-weight: normal; color: #556270; /* [修改] 增大间距 */
}
QRadioButton:checked { color: #2c3e50; font-weight: bold; }
QRadioButton::indicator { width: 20px; height: 20px; } /* [修改] 增大尺寸 */

#AudioAnalysisPage > QWidget > WaveformWidget {
    qproperty-backgroundColor: #FFFFFF; 
    qproperty-waveformColor: #a0a0a0;   
    border: 1px solid #D9DEE4;         
    border-bottom: none;               
    border-radius: 8px 8px 0 0;        
}

SpectrogramWidget {
    qproperty-backgroundColor: #FFFFFF;
    qproperty-spectrogramMinColor: #FFFFFF; 
    qproperty-spectrogramMaxColor: #2c3e50; 
    qproperty-intensityColor: #27ae60;
    qproperty-f0Color: #3B97E3;
    qproperty-f0DerivedColor: rgba(59, 151, 227, 100);
    qproperty-f1Color: #2c3e50;
    qproperty-formantColor: #7f8c8d;
    qproperty-cursorColor: #e74c3c;
    qproperty-infoTextColor: #FFFFFF;
    qproperty-infoBackgroundColor: rgba(44, 62, 80, 0.9); 
    border: 1px solid #D9DEE4;
    border-radius: 0 0 8px 8px; 
}

/* ============================================================================== */
/* == 7. 插件栏与菜单样式 (Plugin Bar & Menu Styles) == */
/* ============================================================================== */

QPushButton#PluginMenuButtonCircular {
    border-radius: 18px; /* [修改] 适配更大的按钮 */
    border: 1px solid #D9DEE4; 
    background-color: #F7F9FC; 
    padding: 2px 15px 2px 10px; /* [修改] 增大内边距 */
    min-width: 75px; /* [修改] 增大最小宽度 */
}
QPushButton#PluginMenuButtonCircular:hover {
    background-color: #FFFFFF;
    border-color: #3B97E3; 
}
QPushButton#PluginMenuButtonCircular:pressed {
    background-color: #E9EDF0; 
}

QPushButton#PinnedPluginButton {
    border-radius: 16px;
    border: 1px solid transparent;
    background-color: transparent;
    padding: 0px;
}
QPushButton#PinnedPluginButton:hover {
    background-color: #E9EDF0; 
}
QPushButton#PinnedPluginButton:pressed {
    background-color: #D9DEE4; 
}

QToolButton#PluginMenuItemToolButton {
    background-color: transparent; 
    border: 1px solid transparent; 
    border-radius: 6px; 
    padding: 5px; /* [修改] 增大内边距 */
    color: #2c3e50; 
}
QToolButton#PluginMenuItemToolButton:hover {
    background-color: #E9EDF0; 
    border: 1px solid #D9DEE4; 
    color: #3B97E3; 
}
QToolButton#PluginMenuItemToolButton:pressed {
    background-color: #D9DEE4; 
}

/* ============================================================================== */
/* == 8. 交互动作增强 (Interaction Enhancement) == */
/* ============================================================================== */
/* (这部分颜色定义在标准版和紧凑版中保持一致，无需修改尺寸) */

QListWidget::item:hover:!selected,
QTableWidget::item:hover:!selected {
    background-color: #F0F2F4; 
}
QHeaderView::section:hover {
    background-color: #E9EDF0; 
    color: #3B97E3;            
}
QTableCornerButton::section:hover {
    background-color: #E9EDF0;
    border: 1px solid #BCC8D4;
}
QTableCornerButton::section:pressed {
    background-color: #D9DEE4;
    border: 1px solid #3B97E3;
}
QSlider::groove:horizontal:hover {
    background: #D9DEE4;
}
QSlider::handle:horizontal:hover {
    background: #E9EDF0; 
}
QSlider::handle:horizontal:pressed {
    background: #D9DEE4;
    border-color: #2F78C0;
}
QScrollBar::handle:vertical:pressed,
QScrollBar::handle:horizontal:pressed {
    background: #aab8c6; 
}
QMenu::item:pressed {
    background-color: #D9DEE4; 
    color: #2c3e50;            
}
QLabel:hover {
    color: #3B97E3; 
}
/* ============================================================================== */
/* == 7. 自定义控件悬停动作 (Custom Widget Hover Actions) == */
/* ============================================================================== */

/* --- ToggleSwitch 精细悬停效果 --- */
/*
 * 当鼠标悬停在 ToggleSwitch 上时 ([hover="true"])，
 * 我们将通过 qproperty- 修改其在 Python 中定义的自定义颜色属性。
 * 这使得悬停效果完全由主题控制。
 */
ToggleSwitch[hover="true"] {
    /* 悬停时，“开启”状态的轨道颜色变得更亮、更饱和 */
    qproperty-hoverTrackColorOn: #6CC0F4; /* Lighter Burnt Sienna */
    
    qproperty-hoverTrackColorOff: #C7CED7; /* Gold */
    
    /* 悬停时，滑块的颜色可以变为一个温暖的米白色，以示区分 */
    qproperty-hoverKnobColor: #FDFBF8; /* Parchment */
    qproperty-hoverKnobMarginOffset: 2; /* 增加 2px 的边距，滑块会明显缩小 */
}
/*
================================================================================
【修正】表格内按钮样式 (Button Style Fix for Tables)
================================================================================ 
*/

/* 
 * 专门为表格内的按钮定义一个更紧凑的样式，
 * 以覆盖全局 QPushButton 的大尺寸设置。
*/
QTableWidget QPushButton {
    background-color: transparent; /* 默认透明，更像一个图标按钮 */
    border: 1px solid transparent; /* 默认无边框 */
    padding: 3px; /* [核心] 大幅减小内边距，这是解决问题的关键 */
    min-height: 0; /* [核心] 移除最小高度限制 */
    border-radius: 4px; /* 使用一个较小的圆角，而不是药丸形 */
}

/* 悬停时提供视觉反馈 */
QTableWidget QPushButton:hover {
    background-color: #F5EDE2; /* 悬停时显示主题的柔和背景色 */
    border: 1px solid #DCD0C0; /* 同时显示一个柔和的边框 */
}

/* 按下时提供视觉反馈 */
QTableWidget QPushButton:pressed {
    background-color: #EAE0D6; /* 按下时颜色加深 */
    border-color: #C9A870;
}
/*
================================================================================
【修正】表格内下拉框样式 (ComboBox Style Fix for Tables)
================================================================================ 
*/

/* 
 * 专门为表格内的 QComboBox 定义一个更紧凑的样式，
 * 以覆盖全局设置中的大尺寸。
*/
QTableWidget QComboBox {
    /* [核心] 大幅减小内外边距和高度限制 */
    padding: 3px 5px; /* 减小内边距，使其不那么“胖” */
    min-height: 0; /* 移除最小高度限制，让其自适应内容 */
    border-radius: 4px; /* 使用一个较小的圆角 */
}

/* 同样需要缩小下拉按钮的尺寸以匹配 */
QTableWidget QComboBox::drop-down {
    width: 18px; /* 减小下拉按钮的宽度 */
    border-top-right-radius: 4px; /* 匹配新的小圆角 */
    border-bottom-right-radius: 4px;
}

/* 最后，缩小下拉箭头图标的尺寸 */
QTableWidget QComboBox::down-arrow {
    width: 10px;
    height: 10px;
}
/* --- RangeSlider 仿真样式 --- */
RangeSlider {
    qproperty-trackColor: #E9EDF0;
    qproperty-rangeColor: #3B97E3;
    qproperty-hoverTrackColor: #D9DEE4; /* [新增] 仿真 groove:hover */
    qproperty-hoverRangeColor: #5DA9E8; /* [新增] 范围条悬停时也变亮 */
    qproperty-handleColor: #FFFFFF;
    qproperty-handleBorderColor: #3B97E3;
    qproperty-hoverHandleColor: #E9EDF0;
    qproperty-pressedHandleColor: #D9DEE4;
    qproperty-pressedHandleBorderColor: #2F78C0;
    qproperty-handleRadius: 9;
}
/*
================================================================================
【修正】音频分析侧边栏背景色 (Audio Analysis Sidebar Background Fix)
================================================================================ 
*/

/* 
 * 为音频分析模块右侧设置栏的滚动区域内容面板指定一个背景色，
 * 以防止其变透明并透出底层窗口的颜色。
 *
 * QScrollArea#SettingsScrollArea > QWidget > QWidget 
 * 这个选择器精确地指向由 setWidget() 方法设置的那个内容QWidget。
*/
QScrollArea#SettingsScrollArea > QWidget > QWidget {
    background-color: #F7F9FC; /* [核心] 设置为与主窗口一致的浅灰色背景 */
    border: none; /* 确保没有额外的边框 */
}
/*
================================================================================
【新增】自定义动画列表样式 (AnimatedListWidget Style - Modern Light)
================================================================================ 
*/
AnimatedListWidget { 
    background-color: #FFFFFF; 
    border: 1px solid #D9DEE4; 
    border-radius: 6px; 
    outline: 0px; 
}

AnimatedListWidget {
    qproperty-itemBrush: transparent;
    qproperty-itemTextColor: #2c3e50;
    qproperty-itemRadius: 4;
    
    /* 悬停状态：使用柔和的浅灰色 */
    qproperty-itemHoverBrush: rgba(59, 151, 227, 0.2);
    
    /* 按下状态：使用比悬停更深的灰色 */
    qproperty-itemHoverBrush: rgba(59, 151, 227, 0.4);
    
    /* 选中状态：背景为主题蓝色，文字为白色 */
    qproperty-itemSelectedBrush: #3B97E3;
    qproperty-itemSelectedTextColor: #FFFFFF;

    /* 边距与原生QListWidget保持一致 */
    qproperty-itemPadding: 4;
    qproperty-itemTextPadding: 8;
    qproperty-minimumItemHeight: 32;
}
/*
================================================================================
【新增】文件管理器树形视图样式 (File Manager Tree View Style - Modern Light)
================================================================================ 
*/

/* --- 1. 树形控件整体 --- */
QTreeWidget {
    background-color: #FFFFFF;
    border: 1px solid #D9DEE4;
    border-radius: 6px; /* 匹配主题圆角 */
    outline: 0px;
}

/* --- 2. 树形列表项 (Item) --- */
QTreeWidget::item {
    padding: 1px 1px;
    border-radius: 4px; /* 项目的圆角 */
    color: #2c3e50;
}

/* 鼠标悬停在未选中的项目上时 */
QTreeWidget::item:hover {
    background-color: #F0F2F4; /* 柔和的灰色悬停背景 */
}

/* 项目被选中，且树形控件拥有焦点 (激活状态) */
QTreeWidget::item:selected:active {
    background-color: rgba(59, 151, 227, 0.2); /* 半透明的主题蓝色 */
    border: 1px solid #3B97E3;                  /* 实色的主题蓝色边框 */
    color: #2c3e50;
}

/* 项目被选中，但树形控件失去焦点时 (非激活状态) */
QTreeWidget::item:selected:!active {
    background-color: #E9EDF0; /* 使用更柔和的浅灰色 */
    color: #2c3e50;
    border: 1px solid transparent;
}
